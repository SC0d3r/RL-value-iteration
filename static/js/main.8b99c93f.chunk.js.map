{"version":3,"sources":["GridTable/GridTable.module.css","GridDirectionTable/GridDirectionTable.module.css","logo.svg","logic.js","GridTable/GridTable.js","GridTable/index.js","GridDirectionTable/GridDirectionTable.js","GridDirectionTable/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","DIRECTIONS","UP","DOWN","LEFT","RIGHT","addTerminalState","i","j","value","grid","newGrid","R","terminalStates","getTerminalStates","push","isTerminalState","some","x","y","addBlock","updateCellValue","isBlock","getCellValue","isValueBlock","step","gamma","T","resultGrid","sizeOfGrid","nextCell","nextI","nextJ","allValues","calculateAllValuesForCell","bestValue","Math","max","getDirection","getNeighborValues","Number","MIN_SAFE_INTEGER","up","down","left","right","e","isValidNeighbor","gridSize","isValidCoordForCell","defaultCellValue","valueForTerminal","undefined","upCellValue","rightCellValue","leftCellValue","bottomCellValue","rewardUP","rewardLeft","rewardRight","rewardDown","result","size","newValue","toString","showNumber","z","indexOf","split","hasTwoZeroDecimals","toExponential","parseFloat","toFixed","withWidth","GridTable","justify","width","onDoubleClickCell","Grid","container","item","alignItems","style","padding","map","isWidthDown","direction","onDoubleClick","className","styles","cell","background","Typography","component","fontSize","random","GridDirectionTable","color","fontWeight","position","bottom","transform","makeStyles","theme","root","marginTop","spacing","App","defaultgrid","makeGrid","useState","defaultGrid","setDefaultGrid","setR","setgamma","setStep","setGrid","isAlertOn","setIsAlertOn","xs","Alert","severity","action","Button","onClick","paddingTop","textAlign","md","sm","TextField","onChange","target","variant","margin","min","type","minHeight","setDynamicGrid","onDblClickOnCell","paddingBottom","height","reward","isNaN","alert","howManySteps","Reward","algorithm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,mC,yICDV,I,sBCGFC,EAAa,CAAEC,GAAI,EAAGC,KAAM,EAAGC,KAAM,EAAGC,MAAO,GA6BrD,SAASC,EAAiBC,EAAGC,EAAGC,EAAOC,GAC5C,IAAIC,EAAUC,IAAQF,GAItB,OAHAC,EAAQJ,GAAGC,GAAKC,EAChBE,EAAQE,eAkBV,SAA2BH,GACzB,OAAOA,EAAKG,gBAAkB,GAnBLC,CAAkBJ,GAC3CC,EAAQE,eAAeE,KAAK,CAACR,EAAGC,IACzBG,EAEF,SAASK,EAAgBT,EAAGC,EAAGE,GACpC,OAAOA,EAAKG,eAAeI,MAAK,mCAAEC,EAAF,KAAKC,EAAL,YAAYD,IAAMX,GAAKC,IAAMW,KAGxD,SAASC,EAASb,EAAGC,EAAGE,GAC7B,OAAOW,EAAgBd,EAAGC,EA1Cd,IA0CwBE,GAG/B,SAASY,EAAQf,EAAGC,EAAGE,GAC5B,MA9CY,MA8CLa,EAAahB,EAAGC,EAAGE,GAErB,SAASc,EAAaf,GAC3B,MAjDY,MAiDLA,EAMF,SAASgB,EAAKb,EAAGc,EAAOC,EAAGjB,GAAwC,IAAlCH,EAAiC,uDAA7B,EAAGC,EAA0B,uDAAtB,EAAGoB,EAAmB,uDAANlB,EACjE,GAAIH,IAAMsB,EAAWnB,GAAM,GACzB,OAAOkB,EAET,MAAuBE,EAASvB,EAAGC,EAAGqB,EAAWnB,IAAjD,mBAAOqB,EAAP,KAAcC,EAAd,KACA,GAAIhB,EAAgBT,EAAGC,EAAGE,IAASY,EAAQf,EAAGC,EAAGE,GAC/C,OAAOe,EAAKb,EAAGc,EAAOC,EAAGjB,EAAMqB,EAAOC,EAAOJ,GAG/C,IAAMK,EAAYC,EAA0B3B,EAAGC,EAAGE,EAAME,EAAGc,EAAOC,GAC5DQ,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQH,IACxBtB,EAAUU,EAAgBd,EAAGC,EAAG2B,EAAWP,GACjD,OAAOH,EAAKb,EAAGc,EAAOC,EAAGjB,EAAMqB,EAAOC,EAAOrB,GAgBxC,SAAS2B,EAAa/B,EAAGC,EAAGE,GACjC,MAAkC6B,EAChChC,EACAC,EACA,EACAE,EACA8B,OAAOC,kBALDC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,MAQlBV,EAAYC,KAAKC,IAAIK,EAAIC,EAAMC,EAAMC,GAE3C,OAAIV,IAAcS,EAAa3C,EAAWG,KACtC+B,IAAcU,EAAc5C,EAAWI,MACvC8B,IAAcQ,EAAa1C,EAAWE,KACnCF,EAAWC,GAGb,SAASqB,EAAahB,EAAGC,EAAGE,GACjC,IACE,OAAOA,EAAKH,GAAGC,GACf,MAAOsC,GACP,QASJ,SAASC,EAAgBxC,EAAGC,EAAGE,GAC7B,OAAQY,EAAQf,EAAGC,EAAGE,IAJxB,SAA6BH,EAAGC,EAAGwC,GACjC,OAAOzC,GAAK,GAAKA,EAAIyC,EAAS,IAAMxC,GAAK,GAAKA,EAAIwC,EAAS,GAG5BC,CAAoB1C,EAAGC,EAAGqB,EAAWnB,IAGtE,SAAS6B,EACPhC,EACAC,EACAI,EACAF,GAGC,IAFDwC,EAEA,uDAFmB,EACnBC,EACA,4DADmBC,EAEbC,EAAcN,EAAgBxC,EAAI,EAAGC,EAAGE,GAC1Ca,EAAahB,EAAI,EAAGC,EAAGE,GACvBwC,EACEI,EAAiBP,EAAgBxC,EAAGC,EAAI,EAAGE,GAC7Ca,EAAahB,EAAGC,EAAI,EAAGE,GACvBwC,EACEK,EAAgBR,EAAgBxC,EAAGC,EAAI,EAAGE,GAC5Ca,EAAahB,EAAGC,EAAI,EAAGE,GACvBwC,EACEM,EAAkBT,EAAgBxC,EAAI,EAAGC,EAAGE,GAC9Ca,EAAahB,EAAI,EAAGC,EAAGE,GACvBwC,EAEJ,MAAO,CACLR,GAAI1B,EAAgBT,EAAI,EAAGC,EAAGE,GACL,IAArByC,EACEA,EACiC,IAAjC5B,EAAahB,EAAI,EAAGC,EAAGE,GACvB,GACC,EACH2C,EACJI,SAAUzC,EAAgBT,EAAI,EAAGC,EAAGE,GACC,IAAjCa,EAAahB,EAAI,EAAGC,EAAGE,GACrB,GACC,EACHE,EACJgC,KAAM5B,EAAgBT,EAAGC,EAAI,EAAGE,GACP,IAArByC,EACEA,EACiC,IAAjC5B,EAAahB,EAAGC,EAAI,EAAGE,GACvB,GACC,EACH6C,EACJG,WAAY1C,EAAgBT,EAAGC,EAAI,EAAGE,GACD,IAAjCa,EAAahB,EAAGC,EAAI,EAAGE,GACrB,GACC,EACHE,EACJiC,MAAO7B,EAAgBT,EAAGC,EAAI,EAAGE,GACR,IAArByC,EACEA,EACiC,IAAjC5B,EAAahB,EAAGC,EAAI,EAAGE,GACvB,GACC,EACH4C,EACJK,YAAa3C,EAAgBT,EAAGC,EAAI,EAAGE,GACF,IAAjCa,EAAahB,EAAGC,EAAI,EAAGE,GACrB,GACC,EACHE,EACJ+B,KAAM3B,EAAgBT,EAAI,EAAGC,EAAGE,GACP,IAArByC,EACEA,EACiC,IAAjC5B,EAAahB,EAAI,EAAGC,EAAGE,GACvB,GACC,EACH8C,EACJI,WAAY5C,EAAgBT,EAAI,EAAGC,EAAGE,GACD,IAAjCa,EAAahB,EAAI,EAAGC,EAAGE,GACrB,GACC,EACHE,GAIR,SAASsB,EAA0B3B,EAAGC,EAAGE,EAAME,EAAGc,EAAOC,GACjCJ,EAAahB,EAAGC,EAAGE,GAAzC,IAEA,EASI6B,EAAkBhC,EAAGC,EAAGI,EAAGF,EAAM,EAAG,GARtCgC,EADF,EACEA,GACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,MACAe,EALF,EAKEA,WACAF,EANF,EAMEA,WACAC,EAPF,EAOEA,YACAF,EARF,EAQEA,SAGII,EAAS,GAyBf,OAvBAA,EAAO9C,KACL,IAAO0C,EAAW/B,EAAQgB,GACxB,IAAOiB,EAAcjC,EAAQmB,GAC7B,IAAOa,EAAahC,EAAQkB,IAGhCiB,EAAO9C,KACL,IAAO6C,EAAalC,EAAQiB,GAC1B,IAAOgB,EAAcjC,EAAQmB,GAC7B,IAAOa,EAAahC,EAAQkB,IAGhCiB,EAAO9C,KACL,IAAO4C,EAAcjC,EAAQmB,GAC3B,IAAOY,EAAW/B,EAAQgB,GAC1B,IAAOkB,EAAalC,EAAQiB,IAGhCkB,EAAO9C,KACL,IAAO2C,EAAahC,EAAQkB,GAC1B,IAAOa,EAAW/B,EAAQgB,GAC1B,IAAOkB,EAAalC,EAAQiB,IAEzBkB,EAGF,SAAShC,EAAWnB,GACzB,OAAOA,EAAKoD,KAEd,SAAShC,EAASvB,EAAGC,EAArB,GAAiC,IAAD,wBAC9B,OAAIA,EAAI,GADsB,KAErB,CAACD,EAAI,EAAG,GAEV,CAACA,EAAGC,EAAI,GAGV,SAASa,EAAgBd,EAAGC,EAAGuD,EAAUrD,GAC9C,IAAMC,EAAUC,IAAQF,GAExB,OADAC,EAAQJ,GAAGC,GAAKuD,EACTpD,EAnPTV,EAAW+D,SAAW,SAAU9C,GAC9B,OAAQA,GACN,KAAKjB,EAAWC,GACd,MAAO,KACT,KAAKD,EAAWE,KACd,MAAO,OACT,KAAKF,EAAWG,KACd,MAAO,OACT,KAAKH,EAAWI,MACd,MAAO,QACT,QACE,MAAO,W,yECyCb,SAAS4D,EAAW/C,GAClB,OAGF,SAA4BA,GAC1B,IAAIgD,EAAIhD,EAAE8C,WACV,OAAwB,IAApBE,EAAEC,QAAQ,OAEE,OADhBD,EAAIA,EAAEE,MAAM,KAAK,IACR,IAAuB,MAATF,EAAE,IAPrBG,CAAmBnD,GAAWA,EAAEoD,cAAc,GAC3CC,WAAWrD,GAAGsD,QAAQ,GAQhBC,ICjEAC,EDiEAD,eA9Df,YAAgF,IAA3D/D,EAA0D,EAA1DA,KAA0D,IAApDiE,eAAoD,MAA1C,aAA0C,EAA5BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,kBACxD,OACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,WAAW,SACXN,QAAQ,SACRO,MAAO,CAAEC,QAAS,QALpB,SAOGzE,EAAK0E,KAAI,SAAClE,EAAGX,GAAJ,OACR,cAACuE,EAAA,EAAD,CACEI,MAAO,CAAEN,MAAOS,YAAY,KAAMT,GAAS,cAAgB,QAE3DI,MAAI,EACJD,WAAS,EACTJ,QAASA,EACTW,UAAU,MANZ,SAQGpE,EAAEkE,KAAI,SAACjE,EAAGX,GAAJ,OACJgB,EAAaL,GAmBZ,cAAC2D,EAAA,EAAD,CACES,cAAe,SAACzC,GAAD,OAAO+B,EAAkBtE,EAAGC,IAC3CwE,MAAI,EACJQ,UAAWC,IAAOC,KAClBR,MAAO,CAAES,WAAY,qBAtBvB,cAACb,EAAA,EAAD,CACES,cAAe,SAACzC,GAAD,OAAO+B,EAAkBtE,EAAGC,IAC3CyE,WAAW,SACXN,QAAQ,SAERK,MAAI,EACJQ,UAAWC,IAAOC,KANpB,SAQE,cAACE,EAAA,EAAD,CACEC,UAAU,OACVX,MAAO,CACLY,SAAU,sBAHd,SAMG7B,EAAW9C,MAVTiB,KAAK2D,cAZX3D,KAAK2D,kB,oEEsFLtB,ICrGAuB,EDqGAvB,eAxFf,YAAsE,IAAxC/D,EAAuC,EAAvCA,KAAuC,IAAjCiE,eAAiC,MAAvB,aAAuB,EAATC,EAAS,EAATA,MAC1D,OACE,cAACE,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EAEJL,QAAQ,SACRO,MAAO,CACLC,QAAS,QANb,SASGzE,EAAK0E,KAAI,SAAClE,EAAGX,GAAJ,OACR,cAACuE,EAAA,EAAD,CACEI,MAAO,CAAEN,MAAOS,YAAY,KAAMT,GAAS,cAAgB,QAE3DI,MAAI,EACJD,WAAS,EACTJ,QAASA,EACTW,UAAU,MANZ,SAQGpE,EAAEkE,KAAI,SAACjE,EAAGX,GAAJ,OACJgB,EAAaL,GAsDZ,cAAC2D,EAAA,EAAD,CACEE,MAAI,EACJQ,UAAWC,IAAOC,KAClBR,MAAO,CAAES,WAAY,qBAxDvB,cAACb,EAAA,EAAD,CACEG,WAAW,SACXN,QAAQ,SAERK,MAAI,EACJQ,UAAWC,IAAOC,KALpB,SAOE,cAACE,EAAA,EAAD,CACEC,UAAU,OACVX,MAAO,CACLY,SAAU,sBAHd,SAMG9E,EAAgBT,EAAGC,EAAGE,IACvBa,EAAahB,EAAGC,EAAGE,GAAQ,EACzB,cAAC,IAAD,CACEwE,MAAO,CACLe,MAAO,MACPC,WAAY,OACZC,SAAU,WACVC,OAAQ,SAGVpF,EAAgBT,EAAGC,EAAGE,IACxBa,EAAahB,EAAGC,EAAGE,IAAS,EAC5B,cAAC,IAAD,CAAWwE,MAAO,CAAEe,MAAO,WACzBhG,EAAWG,OAASkC,EAAa/B,EAAGC,EAAGE,GACzC,cAAC,IAAD,CAAewE,MAAO,CAAEe,MAAO,uBAC7BhG,EAAWI,QAAUiC,EAAa/B,EAAGC,EAAGE,GAC1C,cAAC,IAAD,CACEwE,MAAO,CACLmB,UAAW,aACXJ,MAAO,uBAGThG,EAAWC,KAAOoC,EAAa/B,EAAGC,EAAGE,GACvC,cAAC,IAAD,CACEwE,MAAO,CACLmB,UAAW,gBACXJ,MAAO,uBAIX,cAAC,IAAD,CACEf,MAAO,CACLmB,UAAW,iBACXJ,MAAO,0BA3CV7D,KAAK2D,cAXX3D,KAAK2D,kB,kBEVFO,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ5B,MAAO,OACP,YAAa,CACX6B,UAAWF,EAAMG,QAAQ,SA2MhBC,MAtMf,WACE,IAAIC,ELTC,SAAkB1F,EAAGC,GAE1B,IADA,IAAMT,EAAO,GACJH,EAAI,EAAGA,EAAIW,EAAGX,IAAK,CAC1BG,EAAKH,GAAK,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIW,EAAGX,IACrBE,EAAKH,GAAGC,GAAK,EAKjB,OAFAE,EAAKoD,KAAO,CAAC5C,EAAGC,GAChBT,EAAKG,eAAiB,GACfH,EKDWmG,CAAS,EAAG,GAE9BD,EAActG,EAAiB,EAAG,EAAG,EADrCsG,EAAcxF,EAAS,EAAG,EAAGwF,IAE7BA,EAActG,EAAiB,EAAG,GAAI,EAAGsG,GAEzC,MAAsCE,mBAASF,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkBF,mBAAS,GAA3B,mBAAOlG,EAAP,KAAUqG,EAAV,KACA,EAA0BH,mBAAS,IAAnC,mBAAOpF,EAAP,KAAcwF,EAAd,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOrF,EAAP,KAAa0F,EAAb,KACA,EAAwBL,mBAASC,GAAjC,mBAAOrG,EAAP,KAAa0G,EAAb,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,OACE,qBAAK9B,UAAU,MAAf,SACE,eAACV,EAAA,EAAD,CAAMC,WAAS,EAAf,UACGsC,GACC,cAACvC,EAAA,EAAD,CAAME,MAAI,EAACuC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,SAAS,UACTC,OACE,cAACC,EAAA,EAAD,CACE1B,MAAM,UACNnC,KAAK,QACL8D,QAAS,SAAC9E,GAAD,OAAOwE,GAAa,IAH/B,eAHJ,6EAgBJ,cAACxC,EAAA,EAAD,CAAME,MAAI,EAACuC,GAAI,GAAf,SACE,cAAC3B,EAAA,EAAD,CACEC,UAAU,KACVX,MAAO,CACLC,QAAS,OACT0C,WAAYR,EAAY,SAAW,OACnCS,UAAW,SACXhC,SAAU,uBANd,kCAYF,eAAChB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJuC,GAAI,GACJtC,WAAW,SACXN,QAAQ,SACRW,UAAU,MANZ,UAQE,eAACR,EAAA,EAAD,CACEE,MAAI,EACJuC,GAAI,EACJQ,GAAI,EACJC,GAAI,EACJjD,WAAS,EACTO,UAAU,MACVL,WAAW,SACXN,QAAQ,SARV,UAUE,eAACG,EAAA,EAAD,CAAME,MAAI,EAACE,MAAO,CAAEC,QAAS,OAA7B,gBACM,OAEN,cAACL,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiD,EAAA,EAAD,CACEC,SAAU,SAACpF,GACTqE,EAAQ,GACRC,EAAQL,GAGRE,EAAKnE,EAAEqF,OAAO1H,QAEhByE,MAAO,CAAEN,MAAO,QAChBwD,QAAQ,WACRC,OAAO,QAEP5H,MAAOG,SAKb,eAACkE,EAAA,EAAD,CACEE,MAAI,EACJuC,GAAI,EACJQ,GAAI,EACJC,GAAI,EACJjD,WAAS,EACTO,UAAU,MACVL,WAAW,SACXN,QAAQ,SARV,UAUE,eAACG,EAAA,EAAD,CAAME,MAAI,EAACE,MAAO,CAAEC,QAAS,OAA7B,qBACY,OAEZ,cAACL,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiD,EAAA,EAAD,CACEC,SAAU,SAACpF,GACToE,GAAS,SAAChG,GAAD,OAAOkB,KAAKC,IAAI,EAAGD,KAAKkG,IAAI,GAAIxF,EAAEqF,OAAO1H,WAClD0G,EAAQ,GACRC,EAAQL,IAEV7B,MAAO,CAAEN,MAAO,QAChBwD,QAAQ,WACRC,OAAO,QACPE,KAAK,SACL9H,MAAOiB,YAKf,eAACoD,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTwC,GAAI,GAEJrC,MAAO,CACLsD,UAAW,QANf,UASE,cAAC1D,EAAA,EAAD,CAAME,MAAI,EAACuC,GAAI,GAAIQ,GAAI,EAAGC,GAAI,EAAG9C,MAAO,GAAxC,SACE,cAAC,EAAD,CACEL,kBAAmB,SAACtE,EAAGC,GACrB2G,EAAQ,GAwExB,SAA0B5G,EAAGC,EAAGE,EAAM0G,EAASqB,GACzCnH,EAAQf,EAAGC,EAAGE,IAChB0G,EAAQ/F,EAAgBd,EAAGC,EAAG,EAAGE,IACjC+H,EAAepH,EAAgBd,EAAGC,EAAG,EAAGE,MAExC0G,EAAQhG,EAASb,EAAGC,EAAGE,IACvB+H,EAAerH,EAASb,EAAGC,EAAGE,KA5ElBgI,CAAiBnI,EAAGC,EAAGuG,EAAaC,EAAgBI,IAEtDzC,QAAQ,WACRjE,KAAMA,MAGV,cAACoE,EAAA,EAAD,CAAME,MAAI,EAACuC,GAAI,GAAIQ,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,CAAoBtH,KAAMA,SAI9B,eAACoE,EAAA,EAAD,CACEE,MAAI,EACJD,WAAS,EACTE,WAAW,SACXN,QAAQ,SACR+B,QAAS,EACTxB,MAAO,CAAEyD,cAAe,OAN1B,UAQGlH,EAAO,GACN,cAACqD,EAAA,EAAD,CAAME,MAAI,EAACE,MAAO,CAAEiB,SAAU,WAAYM,UAAW,QAArD,SACE,cAACkB,EAAA,EAAD,CACEzC,MAAO,CAAE0D,OAAQ,QACjBR,QAAQ,YAERR,QAAS,SAAC9E,GACRsE,EAAQL,GACRI,EAAQ,IANZ,oBAaJ,cAACrC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiD,EAAA,EAAD,CACEM,KAAK,SACL9H,MAAOgB,EACPyG,SAAU,SAACpF,GACTqE,GAASrE,EAAEqF,OAAO1H,OAClB2G,EAAQL,IAEVqB,QAAQ,WACRC,OAAO,QACPnD,MAAO,CAAEN,MAAO,OAAQyD,OAAQ,YAGpC,cAACvD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC2C,EAAA,EAAD,CACEzC,MAAO,CAAE0D,OAAQ,QACjBR,QAAQ,YACRnC,MAAM,UACN2B,QAAS,SAAC9E,GACR,IAAM+F,EAASC,OAAOlI,GAAK,GAAKA,EAC5BkI,OAAOlI,IAAImI,MAAM,gCAErB3B,EL5IT,SACL1G,GAOA,IAFC,IAJDsI,EAIA,uDAJe,GACfC,EAGA,uDAHS,EACTvH,EAEA,uDAFQ,GAGJf,EAAUC,IAAQF,GACbH,EAAI,EAAGA,EAAIyI,EAAczI,IAChCI,EAAUc,EAAKwH,EAAQvH,EAAO,GAAKf,GACrC,OAAOA,EKkIeuI,CAAUnC,EAAatF,EAAMoH,EAAQnH,IAC7CyF,GAAQ,SAACjG,GAAD,OAAOA,EAAI,MATvB,6BC5MZ,IAYeiI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b99c93f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"GridTable_cell__16vxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"GridDirectionTable_cell__LCpCz\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as R from \"ramda\";\r\n\r\nconst BLOCK = \"O\";\r\nexport const DIRECTIONS = { UP: 1, DOWN: 2, LEFT: 3, RIGHT: 4 };\r\nDIRECTIONS.toString = function (x) {\r\n  switch (x) {\r\n    case DIRECTIONS.UP:\r\n      return \"UP\";\r\n    case DIRECTIONS.DOWN:\r\n      return \"DOWN\";\r\n    case DIRECTIONS.LEFT:\r\n      return \"LEFT\";\r\n    case DIRECTIONS.RIGHT:\r\n      return \"RIGHT\";\r\n    default:\r\n      return \"UNKOWN\";\r\n  }\r\n};\r\n\r\nexport function makeGrid(x, y) {\r\n  const grid = [];\r\n  for (let i = 0; i < x; i++) {\r\n    grid[i] = [];\r\n    for (let j = 0; j < y; j++) {\r\n      grid[i][j] = 0;\r\n    }\r\n  }\r\n  grid.size = [x, y];\r\n  grid.terminalStates = [];\r\n  return grid;\r\n}\r\n\r\nexport function addTerminalState(i, j, value, grid) {\r\n  let newGrid = R.clone(grid);\r\n  newGrid[i][j] = value;\r\n  newGrid.terminalStates = getTerminalStates(grid);\r\n  newGrid.terminalStates.push([i, j]);\r\n  return newGrid;\r\n}\r\nexport function isTerminalState(i, j, grid) {\r\n  return grid.terminalStates.some(([x, y]) => x === i && j === y);\r\n}\r\n\r\nexport function addBlock(i, j, grid) {\r\n  return updateCellValue(i, j, BLOCK, grid);\r\n}\r\n\r\nexport function isBlock(i, j, grid) {\r\n  return getCellValue(i, j, grid) === BLOCK;\r\n}\r\nexport function isValueBlock(value) {\r\n  return value === BLOCK;\r\n}\r\nfunction getTerminalStates(grid) {\r\n  return grid.terminalStates || [];\r\n}\r\n\r\nexport function step(R, gamma, T, grid, i = 0, j = 0, resultGrid = grid) {\r\n  if (i === sizeOfGrid(grid)[0]) {\r\n    return resultGrid;\r\n  }\r\n  const [nextI, nextJ] = nextCell(i, j, sizeOfGrid(grid));\r\n  if (isTerminalState(i, j, grid) || isBlock(i, j, grid)) {\r\n    return step(R, gamma, T, grid, nextI, nextJ, resultGrid);\r\n  }\r\n\r\n  const allValues = calculateAllValuesForCell(i, j, grid, R, gamma, T);\r\n  const bestValue = Math.max(...allValues);\r\n  const newGrid = updateCellValue(i, j, bestValue, resultGrid);\r\n  return step(R, gamma, T, grid, nextI, nextJ, newGrid);\r\n}\r\n\r\nexport function algorithm(\r\n  grid,\r\n  howManySteps = 10,\r\n  Reward = 0,\r\n  gamma = 0.9,\r\n  eps = 0.01\r\n) {\r\n  let newGrid = R.clone(grid);\r\n  for (let i = 0; i < howManySteps; i++)\r\n    newGrid = step(Reward, gamma, 0.8, newGrid);\r\n  return newGrid;\r\n}\r\n\r\nexport function getDirection(i, j, grid) {\r\n  const { up, down, left, right } = getNeighborValues(\r\n    i,\r\n    j,\r\n    0, //R\r\n    grid,\r\n    Number.MIN_SAFE_INTEGER\r\n  );\r\n\r\n  const bestValue = Math.max(up, down, left, right);\r\n\r\n  if (bestValue === left) return DIRECTIONS.LEFT;\r\n  if (bestValue === right) return DIRECTIONS.RIGHT;\r\n  if (bestValue === down) return DIRECTIONS.DOWN;\r\n  return DIRECTIONS.UP;\r\n}\r\n\r\nexport function getCellValue(i, j, grid) {\r\n  try {\r\n    return grid[i][j];\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\nfunction equals([i, j], [x, y]) {\r\n  return i === x && j === y;\r\n}\r\nfunction isValidCoordForCell(i, j, gridSize) {\r\n  return i >= 0 && i < gridSize[0] && j >= 0 && j < gridSize[1];\r\n}\r\nfunction isValidNeighbor(i, j, grid) {\r\n  return !isBlock(i, j, grid) && isValidCoordForCell(i, j, sizeOfGrid(grid));\r\n}\r\n\r\nfunction getNeighborValues(\r\n  i,\r\n  j,\r\n  R,\r\n  grid,\r\n  defaultCellValue = 0,\r\n  valueForTerminal = undefined\r\n) {\r\n  const upCellValue = isValidNeighbor(i - 1, j, grid)\r\n    ? getCellValue(i - 1, j, grid)\r\n    : defaultCellValue;\r\n  const rightCellValue = isValidNeighbor(i, j + 1, grid)\r\n    ? getCellValue(i, j + 1, grid)\r\n    : defaultCellValue;\r\n  const leftCellValue = isValidNeighbor(i, j - 1, grid)\r\n    ? getCellValue(i, j - 1, grid)\r\n    : defaultCellValue;\r\n  const bottomCellValue = isValidNeighbor(i + 1, j, grid)\r\n    ? getCellValue(i + 1, j, grid)\r\n    : defaultCellValue;\r\n\r\n  return {\r\n    up: isTerminalState(i - 1, j, grid)\r\n      ? valueForTerminal === 0\r\n        ? valueForTerminal\r\n        : getCellValue(i - 1, j, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : upCellValue,\r\n    rewardUP: isTerminalState(i - 1, j, grid)\r\n      ? getCellValue(i - 1, j, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : R,\r\n    left: isTerminalState(i, j - 1, grid)\r\n      ? valueForTerminal === 0\r\n        ? valueForTerminal\r\n        : getCellValue(i, j - 1, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : leftCellValue,\r\n    rewardLeft: isTerminalState(i, j - 1, grid)\r\n      ? getCellValue(i, j - 1, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : R,\r\n    right: isTerminalState(i, j + 1, grid)\r\n      ? valueForTerminal === 0\r\n        ? valueForTerminal\r\n        : getCellValue(i, j + 1, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : rightCellValue,\r\n    rewardRight: isTerminalState(i, j + 1, grid)\r\n      ? getCellValue(i, j + 1, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : R,\r\n    down: isTerminalState(i + 1, j, grid)\r\n      ? valueForTerminal === 0\r\n        ? valueForTerminal\r\n        : getCellValue(i + 1, j, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : bottomCellValue,\r\n    rewardDown: isTerminalState(i + 1, j, grid)\r\n      ? getCellValue(i + 1, j, grid) === 1\r\n        ? 1\r\n        : -1\r\n      : R,\r\n  };\r\n}\r\n\r\nfunction calculateAllValuesForCell(i, j, grid, R, gamma, T) {\r\n  const thisCellValue = getCellValue(i, j, grid);\r\n\r\n  const {\r\n    up,\r\n    down,\r\n    left,\r\n    right,\r\n    rewardDown,\r\n    rewardLeft,\r\n    rewardRight,\r\n    rewardUP,\r\n  } = getNeighborValues(i, j, R, grid, 0, 0);\r\n\r\n  const result = [];\r\n\r\n  result.push(\r\n    0.8 * (rewardUP + gamma * up) +\r\n      0.1 * (rewardRight + gamma * right) +\r\n      0.1 * (rewardLeft + gamma * left)\r\n  );\r\n\r\n  result.push(\r\n    0.8 * (rewardDown + gamma * down) +\r\n      0.1 * (rewardRight + gamma * right) +\r\n      0.1 * (rewardLeft + gamma * left)\r\n  );\r\n\r\n  result.push(\r\n    0.8 * (rewardRight + gamma * right) +\r\n      0.1 * (rewardUP + gamma * up) +\r\n      0.1 * (rewardDown + gamma * down)\r\n  );\r\n\r\n  result.push(\r\n    0.8 * (rewardLeft + gamma * left) +\r\n      0.1 * (rewardUP + gamma * up) +\r\n      0.1 * (rewardDown + gamma * down)\r\n  );\r\n  return result;\r\n}\r\n\r\nexport function sizeOfGrid(grid) {\r\n  return grid.size;\r\n}\r\nfunction nextCell(i, j, [x, y]) {\r\n  if (j + 1 >= y) {\r\n    return [i + 1, 0];\r\n  }\r\n  return [i, j + 1];\r\n}\r\n\r\nexport function updateCellValue(i, j, newValue, grid) {\r\n  const newGrid = R.clone(grid);\r\n  newGrid[i][j] = newValue;\r\n  return newGrid;\r\n}\r\n","import { sizeOfGrid, getCellValue, isValueBlock } from \"../logic\";\r\nimport styles from \"./GridTable.module.css\";\r\nimport { Grid, isWidthDown, Typography, withWidth } from \"@material-ui/core\";\r\n\r\nfunction GridTable({ grid, justify = \"flex-start\", width, onDoubleClickCell }) {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"2rem\" }}\r\n    >\r\n      {grid.map((x, i) => (\r\n        <Grid\r\n          style={{ width: isWidthDown(\"xs\", width) ? \"fit-content\" : \"none\" }}\r\n          key={Math.random()}\r\n          item\r\n          container\r\n          justify={justify}\r\n          direction=\"row\"\r\n        >\r\n          {x.map((y, j) =>\r\n            !isValueBlock(y) ? (\r\n              <Grid\r\n                onDoubleClick={(e) => onDoubleClickCell(i, j)}\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                key={Math.random()}\r\n                item\r\n                className={styles.cell}\r\n              >\r\n                <Typography\r\n                  component=\"body\"\r\n                  style={{\r\n                    fontSize: \"calc(0.5rem + 5px)\",\r\n                  }}\r\n                >\r\n                  {showNumber(y)}\r\n                </Typography>\r\n              </Grid>\r\n            ) : (\r\n              <Grid\r\n                onDoubleClick={(e) => onDoubleClickCell(i, j)}\r\n                item\r\n                className={styles.cell}\r\n                style={{ background: \"rgba(0,0,0,0.7)\" }}\r\n              ></Grid>\r\n            )\r\n          )}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction showNumber(x) {\r\n  if (hasTwoZeroDecimals(x)) return x.toExponential(2);\r\n  return parseFloat(x).toFixed(3);\r\n}\r\nfunction hasTwoZeroDecimals(x) {\r\n  let z = x.toString();\r\n  if (z.indexOf(\".\") === -1) return false;\r\n  z = z.split(\".\")[1];\r\n  return z[0] === \"0\" && z[1] === \"0\";\r\n}\r\nexport default withWidth()(GridTable);\r\n","import GridTable from \"./GridTable\";\r\nexport default GridTable;\r\n","import {\r\n  isValueBlock,\r\n  getDirection,\r\n  DIRECTIONS,\r\n  isTerminalState,\r\n  getCellValue,\r\n} from \"../logic\";\r\nimport styles from \"./GridDirectionTable.module.css\";\r\nimport { Grid, isWidthDown, Typography, withWidth } from \"@material-ui/core\";\r\n\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nfunction GridDirectionTable({ grid, justify = \"flex-start\", width }) {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      // alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{\r\n        padding: \"2rem\",\r\n      }}\r\n    >\r\n      {grid.map((x, i) => (\r\n        <Grid\r\n          style={{ width: isWidthDown(\"xs\", width) ? \"fit-content\" : \"none\" }}\r\n          key={Math.random()}\r\n          item\r\n          container\r\n          justify={justify}\r\n          direction=\"row\"\r\n        >\r\n          {x.map((y, j) =>\r\n            !isValueBlock(y) ? (\r\n              <Grid\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                key={Math.random()}\r\n                item\r\n                className={styles.cell}\r\n              >\r\n                <Typography\r\n                  component=\"body\"\r\n                  style={{\r\n                    fontSize: \"calc(0.5rem + 5px)\",\r\n                  }}\r\n                >\r\n                  {isTerminalState(i, j, grid) &&\r\n                  getCellValue(i, j, grid) < 0 ? (\r\n                    <RemoveIcon\r\n                      style={{\r\n                        color: \"red\",\r\n                        fontWeight: \"bold\",\r\n                        position: \"relative\",\r\n                        bottom: \"2px\",\r\n                      }}\r\n                    />\r\n                  ) : isTerminalState(i, j, grid) &&\r\n                    getCellValue(i, j, grid) >= 0 ? (\r\n                    <CheckIcon style={{ color: \"green\" }} />\r\n                  ) : DIRECTIONS.LEFT === getDirection(i, j, grid) ? (\r\n                    <ArrowBackIcon style={{ color: \"rgba(3,2,255,0.9)\" }} />\r\n                  ) : DIRECTIONS.RIGHT === getDirection(i, j, grid) ? (\r\n                    <ArrowBackIcon\r\n                      style={{\r\n                        transform: \"scaleX(-1)\",\r\n                        color: \"rgba(3,2,255,0.9)\",\r\n                      }}\r\n                    />\r\n                  ) : DIRECTIONS.UP === getDirection(i, j, grid) ? (\r\n                    <ArrowBackIcon\r\n                      style={{\r\n                        transform: \"rotate(90deg)\",\r\n                        color: \"rgba(3,2,255,0.9)\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <ArrowBackIcon\r\n                      style={{\r\n                        transform: \"rotate(-90deg)\",\r\n                        color: \"rgba(3,2,255,0.9)\",\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            ) : (\r\n              <Grid\r\n                item\r\n                className={styles.cell}\r\n                style={{ background: \"rgba(0,0,0,0.7)\" }}\r\n              ></Grid>\r\n            )\r\n          )}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withWidth()(GridDirectionTable);\r\n","import GridDirectionTable from \"./GridDirectionTable\";\r\nexport default GridDirectionTable;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport {\n  addBlock,\n  addTerminalState,\n  algorithm,\n  makeGrid,\n  isBlock,\n  updateCellValue,\n} from \"./logic\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport GridTable from \"./GridTable\";\nimport GridDirectionTable from \"./GridDirectionTable\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction App() {\n  let defaultgrid = makeGrid(3, 4);\n  defaultgrid = addBlock(1, 1, defaultgrid);\n  defaultgrid = addTerminalState(0, 3, 1, defaultgrid);\n  defaultgrid = addTerminalState(1, 3, -1, defaultgrid);\n\n  const [defaultGrid, setDefaultGrid] = useState(defaultgrid);\n  const [R, setR] = useState(0);\n  const [gamma, setgamma] = useState(0.9);\n  const [step, setStep] = useState(1);\n  const [grid, setGrid] = useState(defaultGrid);\n  const [isAlertOn, setIsAlertOn] = useState(true);\n\n  return (\n    <div className=\"app\">\n      <Grid container>\n        {isAlertOn && (\n          <Grid item xs={12}>\n            <Alert\n              severity=\"success\"\n              action={\n                <Button\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={(e) => setIsAlertOn(false)}\n                >\n                  X\n                </Button>\n              }\n            >\n              You can double click on a cell to create/destory a block cell\n            </Alert>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <Typography\n            component=\"h1\"\n            style={{\n              padding: \"2rem\",\n              paddingTop: isAlertOn ? \"0.5rem\" : \"2rem\",\n              textAlign: \"center\",\n              fontSize: \"calc(1.4rem + 12px)\",\n            }}\n          >\n            RL Value Iteration\n          </Typography>\n        </Grid>\n        <Grid\n          container\n          item\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          direction=\"row\"\n        >\n          <Grid\n            item\n            xs={4}\n            md={2}\n            sm={2}\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item style={{ padding: \"4px\" }}>\n              r ={\" \"}\n            </Grid>\n            <Grid item>\n              <TextField\n                onChange={(e) => {\n                  setStep(1);\n                  setGrid(defaultGrid);\n                  // const x = +e.target.value;\n                  // setR(isNaN(x) ? 0 : x);\n                  setR(e.target.value);\n                }}\n                style={{ width: \"80px\" }}\n                variant=\"outlined\"\n                margin=\"dense\"\n                // type=\"number\"\n                value={R}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            xs={4}\n            md={2}\n            sm={2}\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid item style={{ padding: \"4px\" }}>\n              &gamma; ={\" \"}\n            </Grid>\n            <Grid item>\n              <TextField\n                onChange={(e) => {\n                  setgamma((x) => Math.max(0, Math.min(1, +e.target.value)));\n                  setStep(1);\n                  setGrid(defaultGrid);\n                }}\n                style={{ width: \"80px\" }}\n                variant=\"outlined\"\n                margin=\"dense\"\n                type=\"number\"\n                value={gamma}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          // alignItems=\"center\"\n          style={{\n            minHeight: \"55vh\",\n          }}\n        >\n          <Grid item xs={12} md={6} sm={6} style={{}}>\n            <GridTable\n              onDoubleClickCell={(i, j) => {\n                setStep(1);\n                // setGrid(defaultGrid);\n                onDblClickOnCell(i, j, defaultGrid, setDefaultGrid, setGrid);\n              }}\n              justify=\"flex-end\"\n              grid={grid}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} sm={6}>\n            <GridDirectionTable grid={grid} />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          justify=\"center\"\n          spacing={2}\n          style={{ paddingBottom: \"1vw\" }}\n        >\n          {step > 1 && (\n            <Grid item style={{ position: \"relative\", marginTop: \"-1px\" }}>\n              <Button\n                style={{ height: \"39px\" }}\n                variant=\"contained\"\n                // color=\"secondary\"\n                onClick={(e) => {\n                  setGrid(defaultGrid);\n                  setStep(1);\n                }}\n              >\n                Rest\n              </Button>\n            </Grid>\n          )}\n          <Grid item>\n            <TextField\n              type=\"number\"\n              value={step}\n              onChange={(e) => {\n                setStep(+e.target.value);\n                setGrid(defaultGrid);\n              }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              style={{ width: \"80px\", margin: \"auto\" }}\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              style={{ height: \"39px\" }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => {\n                const reward = isNaN(+R) ? 0 : +R;\n                if (isNaN(+R)) alert(\"Reward is not a valid number\");\n\n                setGrid(algorithm(defaultGrid, step, reward, gamma));\n                setStep((x) => x + 1);\n              }}\n            >\n              step\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\nfunction onDblClickOnCell(i, j, grid, setGrid, setDynamicGrid) {\n  if (isBlock(i, j, grid)) {\n    setGrid(updateCellValue(i, j, 0, grid));\n    setDynamicGrid(updateCellValue(i, j, 0, grid));\n  } else {\n    setGrid(addBlock(i, j, grid));\n    setDynamicGrid(addBlock(i, j, grid));\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport R from \"ramda\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}